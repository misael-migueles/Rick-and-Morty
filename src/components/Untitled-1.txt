import { useState } from "react";
import validation from "./validation";

const Form=()=>{
    const[userData, setUserData]= useState({
    username:"",
    password:""
    });
    const[error, setError]=useState({
     username:"",
     password:""
    });
    const handleInputChange =(evento)=>{
       setUserData({
        ...userData,
        [evento.target.name]: evento.target.value
       });
       setError(

        validation({
            ...userData,
            [evento.target.name]: evento.target.value
        })
       );
    }
    return(
        <form>
            <label htmlFor="userName">UserName</label>
            <input type="text" name="username" value={userData.username} onChange={handleInputChange}/>
            {error.username && <p>{error.username}</p>}
            <label htmlFor="password">Password</label>
            <input type="password" name="password" value={userData.password} onChange={handleInputChange}/>
            {error.password && <p>{error.password}</p>}
            <button>Login</button>
        </form>
    )
}

export default Form;








const validation=({userData})=>{
 let errors = {};
 if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(userData.useReducer)){
    errors.username = "El email es invalido";
 }
 if(!userData.username){
    errors.username =" Este campo no puede estrar vacio";
 }
 if(userData.username.length < 35){
    errors.username="El email no puede superar los 35 caracteres";
 }
 if(userData.password.match(/\d/)){
    errors.password ="La contraseña debe contener al menos un numero";
 }
 if(userData.password.length > 6 || userData.password.length > 10){
    errors.password = " La contraseña deve tener menos de 10 caracteres"
 }
 return errors;
}
export default validation